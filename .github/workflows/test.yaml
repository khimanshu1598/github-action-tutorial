name: Setup SQLCMD and ODBC Driver

on:
  workflow_dispatch:

jobs:
  setup-sql-tools:
    runs-on: windows-latest # Your Windows self-hosted runner

    steps:
    - name: üß∞ Create temp folder
      run: |
        New-Item -Path "C:\temp" -ItemType Directory -Force

    - name: ‚úÖ Download and install ODBC Driver 17
      run: |
        Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/?linkid=2307162" -OutFile "C:\temp\msodbcsql.msi"
        Start-Process msiexec.exe -Wait -ArgumentList '/i C:\temp\msodbcsql.msi /quiet /norestart IACCEPTMSODBCSQLLICENSETERMS=YES'

    - name: ‚úÖ Download and install classic SQLCMD
      run: |
        Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/?linkid=2216599" -OutFile "C:\temp\SqlCmdLnUtils.msi"
        Start-Process msiexec.exe -Wait -ArgumentList '/i C:\temp\SqlCmdLnUtils.msi /quiet /norestart IACCEPTSQLCMDLNUTILSLICENSETERMS=YES'

    - name: üîç Verify ODBC Driver is installed
      run: |
        $odbc = Get-WmiObject -Class Win32_Product | Where-Object { $_.Name -like "Microsoft ODBC Driver*" }
        if ($null -eq $odbc) {
          Write-Error "‚ùå ODBC Driver not installed."
          exit 1
        } else {
          Write-Host "‚úÖ ODBC Driver installed: $($odbc.Name)"
        }

    - name: üîç Verify sqlcmd is installed
      run: |
        $cmd = Get-Command sqlcmd -ErrorAction SilentlyContinue
        if ($null -eq $cmd) {
          Write-Error "‚ùå sqlcmd is NOT installed or not in PATH."
          exit 1
        } else {
          Write-Host "‚úÖ sqlcmd installed at: $($cmd.Source)"
          sqlcmd -?  # Print basic info to confirm
        }
